leaflet()
library(leaflet)
leaflet() %>% addTiles()
#p <- leaflet() %>% addTiles()
# The addProviderTiles command simplifies syntax.
p <- leaflet() %>% addProviderTiles(providers$OpenTopoMap)
p
p <- leaflet() %>%
addProviderTiles(providers$OpenTopoMap) %>%
setView(lat=40.2, lng=92.6, zoom=7)
p
p <- leaflet() %>%
addProviderTiles(providers$NASAGIBS.ViirsEarthAtNight2012) %>%
#addProviderTiles(providers$CartoDB.PositronOnlyLabels) %>%
setView(lat=40.2, lng=-92.6, zoom=12)
p
map.data <- data.frame(
lng=c(-92.5809, -92.5890, -92.6468),
lat=c(40.1866, 40.1936, 40.1854),
label=c("Truman", "A.T. Still", "Thousand Hills")
)
map.data
p <- leaflet(map.data) %>% addTiles() %>%
setView(lat=40.2, lng=-92.6, zoom=12) %>%
addMarkers(lng = ~lng, lat = ~lat, popup = ~label)
p
library(mapview)
mapshot(p, file="kirksville_map.png")
trails %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolygons(data=franconia) %>%
addPolylines() %>%
addCircleMarkers(data=breweries)
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolylines()
# Seems that Leaflet needs a palette function defined for use in functions.
district.pal <- colorFactor(brewer.pal(3, name="Dark2"),
domain=franconia$district)
# Since only one dataframe uses non-lat/long coordinates, I'll just pipe that
# one in as the default. If I had more than one data file that needed
# conversion, I'd need to pre-compute the right coordinates, I think.
trails %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolygons(data=franconia, fillColor=~district.pal(district),
popup=~paste("District:", district), opacity=1, weight=1,
color="black")  %>%
addPolylines(weight=2, color="blue", popup=~paste("Trail:", FGN)) %>%
addCircleMarkers(data=breweries, color="orange",
popup=~paste("Brewery:", brewery),
radius=2, opacity=.8) %>%
addLegend(data=franconia, pal=district.pal, values=~district,
title="District")
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>%
ggplot() + geom_sf(aes(fill=Total_Damage))
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>%
ggplot() + geom_sf(aes(fill=Total_Damage)) + scale_fill_manual()
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>%
ggplot() + geom_sf(aes(fill=Total_Damage)) + scale_fill_continuous()
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>%
ggplot() + geom_sf(aes(fill=Total_Damage)) +
labs(title="Total Damage by County in Missouri in 2011", fill="Total Damage", x="Latitude", y="Longitude")
# Note: Adding more explanatory labels before calling mapview. The mapview
# command is efficient, but doing more with it does seem to require a bit
# more planning?
franconia <- franconia %>% mutate(District = paste("District: ", district))
trails <- trails %>% mutate(Trail = paste("Trail: ", FGN))
breweries <- breweries %>% mutate(Brewery = paste("Brewery: ", brewery))
# Note that I had to turn coloring of the breweries off. Coloring of trails
# seemed like a nice touch, perhaps.
mapview(franconia, zcol="District") +
mapview(trails, zcol="Trail", legend=FALSE) +
mapview(breweries, zcol="Brewery", legend=FALSE, color="orange",
col.regions="orange", cex=2)
mapview(new_sf)
install.packages("mapview")
mapview(new_sf)
install.packages("mapview")
#install.packages("mapview")
library(mapview)
mapview(new_sf)
#install.packages("mapview")
library(mapview)
library(RColorBrewer)
mapview(new_sf)
library(tidyverse)
library(sf)
library(leaflet)
library(mapview)
library(RColorBrewer)
library(tmap)
#install.packages("usmap")
library(usmap)
mo_sf <- st_as_sf(maps::map("county", "missouri", plot = FALSE, fill = TRUE))
ggplot(mo_sf) + geom_sf()
storm <- read.csv('storm_2011.csv')
mo_storm <- storm %>% filter(State == 'MO')
mo_storm[[2]] <- tolower(mo_storm[[2]])
mo_storm$Countyname <- paste("missouri", mo_storm$Countyname, sep = ",")
storm_sf <- st_as_sf(x=mo_storm,
coords = c("Longitude", "Latitude"),
crs = "+proj=longlat + datum=WGS84 + ellps=WGS84 + towgs84=0,0,0")
storm_sf$geom <- storm_sf$geometry
new_sf <- inner_join(mo_sf, mo_storm, by=c("ID"="Countyname"))
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>%
ggplot() + geom_sf(aes(fill=Total_Damage)) +
labs(title="Total Damage by County in Missouri in 2011", fill="Total Damage", x="Latitude", y="Longitude")
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolylines()
#install.packages("mapview")
library(mapview)
library(RColorBrewer)
mapview(new_sf)
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor =~Total_Damage)
addPolylines()
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor =~Total_Damage)
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor =Total_Damage)
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolygons(data=new_sf, fillColor =~Total_Damage)
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor =~Total_Damage)
new_sf <- new_sf %>%
mutate(ID=str_remove(ID, "missouri,"))
new_sf <- new_sf %>%
mutate(ID=str_remove(ID, "missouri,"))
new_sf[[1]] <- toupper(new_sf[[1]])
new_sf <- new_sf %>%
mutate(ID=str_remove(ID, "missouri,"))
new_sf[[1]] <- str_to_title(new_sf[[1]])
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor =~Total_Damage, popup =~paste("County:", ID))
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor =~Total_Damage, popup =~paste("County:", ~ID))
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor =~Total_Damage, popup =~paste("County:", "ID"))
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor =~Total_Damage, popup =~paste("County:", new_sf$ID))
# Seems that Leaflet needs a palette function defined for use in functions.
district.pal <- colorFactor(brewer.pal(3, name="Dark2"),
domain=franconia$district)
# Since only one dataframe uses non-lat/long coordinates, I'll just pipe that
# one in as the default. If I had more than one data file that needed
# conversion, I'd need to pre-compute the right coordinates, I think.
trails %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolygons(data=franconia, fillColor=~district.pal(district),
popup=~paste("District:", district), opacity=1, weight=1,
color="black")  %>%
addPolylines(weight=2, color="blue", popup=~paste("Trail:", FGN)) %>%
addCircleMarkers(data=breweries, color="orange",
popup=~paste("Brewery:", brewery),
radius=2, opacity=.8) %>%
addLegend(data=franconia, pal=district.pal, values=~district,
title="District")
View(district.pal)
View(district.pal)
library(mapview)
mapview(new_sf)
library(systemfonts)
install.packages('systemfonts')
library(mapview)
mapview(new_sf)
library(systemfonts)
#install.packages('systemfonts')
library(systemfonts)
#install.packages('systemfonts')
install.packages('XQuartz')
library(systemfonts)
library(systemfonts)
library(mapview)
mapview(new_sf)
# Note: Adding more explanatory labels before calling mapview. The mapview
# command is efficient, but doing more with it does seem to require a bit
# more planning?
franconia <- franconia %>% mutate(District = paste("District: ", district))
trails <- trails %>% mutate(Trail = paste("Trail: ", FGN))
breweries <- breweries %>% mutate(Brewery = paste("Brewery: ", brewery))
# Note that I had to turn coloring of the breweries off. Coloring of trails
# seemed like a nice touch, perhaps.
mapview(franconia, zcol="District") +
mapview(trails, zcol="Trail", legend=FALSE) +
mapview(breweries, zcol="Brewery", legend=FALSE, color="orange",
col.regions="orange", cex=2)
library(systemfonts)
library(mapview)
mapview(new_sf, zcol="Damage")
library(systemfonts)
library(mapview)
mapview(new_sf, zcol=sum("Damage" + "Cropdamage"))
library(systemfonts)
library(mapview)
mapview(new_sf) + mapview(new_sf, zcol="Damage")
library(systemfonts)
library(mapview)
mapview(new_sf) + mapview(new_sf)
library(systemfonts)
library(mapview)
mapview(new_sf) + mapview(alpha.regions = .2)
library(systemfonts)
library(mapview)
mapview(new_sf, alpha.regions = .2)
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor =~Total_Damage, popup =~paste("County:", new_sf$ID))
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>%
ggplot() + geom_sf(aes(fill=Total_Damage)) +
labs(title="Total Damage by County in Missouri in 2011", fill="Total Damage", x="Latitude", y="Longitude")
library(tidyverse)
library(sf)
library(leaflet)
library(mapview)
library(RColorBrewer)
library(tmap)
#install.packages("usmap")
library(usmap)
mo_sf <- st_as_sf(maps::map("county", "missouri", plot = FALSE, fill = TRUE))
ggplot(mo_sf) + geom_sf()
storm <- read.csv('storm_2011.csv')
mo_storm <- storm %>% filter(State == 'MO')
mo_storm[[2]] <- tolower(mo_storm[[2]])
mo_storm$Countyname <- paste("missouri", mo_storm$Countyname, sep = ",")
storm_sf <- st_as_sf(x=mo_storm,
coords = c("Longitude", "Latitude"),
crs = "+proj=longlat + datum=WGS84 + ellps=WGS84 + towgs84=0,0,0")
storm_sf$geom <- storm_sf$geometry
new_sf <- inner_join(mo_sf, mo_storm, by=c("ID"="Countyname"))
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>%
ggplot() + geom_sf(aes(fill=Total_Damage)) +
labs(title="Total Damage by County in Missouri in 2011", fill="Total Damage", x="Latitude", y="Longitude")
print(Total_Damage)
library(systemfonts)
library(mapview)
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>% mapview()
library(systemfonts)
library(mapview)
interactive_sf <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(interactive_sf)
library(systemfonts)
library(mapview)
interactive_sf <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>% mutate(County = paste("County: ", ID))
library(systemfonts)
library(mapview)
interactive_sf <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(interactive_sf)
library(systemfonts)
library(mapview)
interactive_sf <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(interactive_sf, legend=FALSE)
library(systemfonts)
library(mapview)
interactive_sf <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(interactive_sf)
library(systemfonts)
library(mapview)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(interactive_sf)
library(systemfonts)
library(mapview)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage)
library(systemfonts)
library(mapview)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, alpha.regions = .2)
library(systemfonts)
library(mapview)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, alpha.regions = 1)
library(systemfonts)
library(mapview)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, alpha.regions = .7)
library(systemfonts)
library(mapview)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, alpha.regions = .9)
library(systemfonts)
library(mapview)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, label=makeLabels(x))
library(systemfonts)
library(mapview)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, popup = popupTable(new_sf, zcol = c("ID", "Damage", "Cropdamage")))
library(systemfonts)
library(mapview)
library(leaflet)
library(leafpop)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, popup = popupTable(new_sf, zcol = c("ID", "Damage", "Cropdamage")))
new_sf <- new_sf %>%
mutate(ID=str_remove(ID, "missouri,"))
new_sf[[1]] <- str_to_title(new_sf[[1]])
library(systemfonts)
library(mapview)
library(leaflet)
library(leafpop)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, popup = popupTable(new_sf, zcol = c("ID", "Damage", "Cropdamage")))
library(systemfonts)
library(mapview)
library(leaflet)
library(leafpop)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, popup = popupTable(new_sf, zcol = c("ID", "Damage", "Cropdamage")), alpha = .8)
library(systemfonts)
library(mapview)
library(leaflet)
library(leafpop)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, popup = popupTable(new_sf, zcol = c("ID", "Damage", "Cropdamage")), alpha.regions = .8)
library(systemfonts)
library(mapview)
library(leaflet)
library(leafpop)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, popup = popupTable(new_sf, zcol = c("ID", "Damage", "Cropdamage")), alpha.regions = .7)
library(systemfonts)
library(mapview)
library(leaflet)
library(leafpop)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, popup = popupTable(new_sf, zcol = c("ID", "Damage", "Cropdamage")), alpha = .7)
library(systemfonts)
library(mapview)
library(leaflet)
library(leafpop)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, popup = popupTable(new_sf, zcol = c("ID", "Damage", "Cropdamage")), alpha.regions = .7)
library(tidyverse)
library(sf)
library(leaflet)
library(mapview)
library(RColorBrewer)
library(tmap)
#install.packages("usmap")
library(usmap)
mo_sf <- st_as_sf(maps::map("county", "missouri", plot = FALSE, fill = TRUE))
ggplot(mo_sf) + geom_sf()
storm <- read.csv('storm_2011.csv')
mo_storm <- storm %>% filter(State == 'MO')
mo_storm[[2]] <- tolower(mo_storm[[2]])
mo_storm$Countyname <- paste("missouri", mo_storm$Countyname, sep = ",")
storm_sf <- st_as_sf(x=mo_storm,
coords = c("Longitude", "Latitude"),
crs = "+proj=longlat + datum=WGS84 + ellps=WGS84 + towgs84=0,0,0")
storm_sf$geom <- storm_sf$geometry
new_sf <- inner_join(mo_sf, mo_storm, by=c("ID"="Countyname"))
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>%
ggplot() + geom_sf(aes(fill=Total_Damage)) +
labs(title="Total Damage by County in Missouri in 2011", fill="Total Damage", x="Latitude", y="Longitude")
new_sf <- new_sf %>%
mutate(ID=str_remove(ID, "missouri,"))
new_sf[[1]] <- str_to_title(new_sf[[1]])
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84") %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor =~Total_Damage, popup =~paste("County:", new_sf$ID))
library(systemfonts)
library(mapview)
library(leaflet)
library(leafpop)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, popup = popupTable(new_sf, zcol = c("ID", "Damage", "Cropdamage")), alpha.regions = .7)
library(systemfonts)
library(mapview)
library(leaflet)
library(leafpop)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, popup = popupTable(new_sf, zcol = c("ID", "Damage", "Cropdamage")), alpha.regions = .7)
unlink('STAT320_MittenHomework7_cache', recursive = TRUE)
rm -rv _bookdown_files
knitr::opts_chunk$set(cache = F)
library(tidyverse)
library(sf)
library(leaflet)
library(mapview)
library(RColorBrewer)
library(tmap)
#install.packages("usmap")
library(usmap)
knitr::opts_chunk$set(cache = F)
mo_sf <- st_as_sf(maps::map("county", "missouri", plot = FALSE, fill = TRUE))
ggplot(mo_sf) + geom_sf()
storm <- read.csv('storm_2011.csv')
mo_storm <- storm %>% filter(State == 'MO')
mo_storm[[2]] <- tolower(mo_storm[[2]])
mo_storm$Countyname <- paste("missouri", mo_storm$Countyname, sep = ",")
storm_sf <- st_as_sf(x=mo_storm,
coords = c("Longitude", "Latitude"),
crs = "+proj=longlat + datum=WGS84 + ellps=WGS84 + towgs84=0,0,0")
storm_sf$geom <- storm_sf$geometry
new_sf <- inner_join(mo_sf, mo_storm, by=c("ID"="Countyname"))
new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>%
ggplot() + geom_sf(aes(fill=Total_Damage)) +
labs(title="Total Damage by County in Missouri in 2011", fill="Total Damage", x="Latitude", y="Longitude")
new_sf <- new_sf %>%
mutate(ID=str_remove(ID, "missouri,"))
new_sf[[1]] <- str_to_title(new_sf[[1]])
library(systemfonts)
library(mapview)
library(leaflet)
library(leafpop)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, popup = popupTable(new_sf, zcol = c("ID", "Damage", "Cropdamage")), alpha.regions = .7)
library(systemfonts)
library(mapview)
library(leaflet)
library(leafpop)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
g <- mapview(Amount.of.Damage, popup = popupTable(new_sf, zcol = c("ID", "Damage", "Cropdamage")), alpha.regions = .7)
tagList(g)
library(systemfonts)
library(mapview)
library(leaflet)
library(leafpop)
library(htmltools)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
g <- mapview(Amount.of.Damage, popup = popupTable(new_sf, zcol = c("ID", "Damage", "Cropdamage")), alpha.regions = .7)
tagList(g)
library(systemfonts)
library(mapview)
library(leaflet)
library(leafpop)
Amount.of.Damage <- new_sf %>% group_by(ID) %>% summarize(Total_Damage = sum(Damage + Cropdamage)) %>%
select(Total_Damage) %>% st_transform(crs="WGS84")
mapview(Amount.of.Damage, popup = popupTable(new_sf, zcol = c("ID", "Damage", "Cropdamage")), alpha.regions = .7)
remotes::install_github("r-spatial/mapview")
library(tidyverse)
library(sf)
library(leaflet)
library(mapview)
library(RColorBrewer)
library(tmap)
#install.packages("usmap")
library(usmap)
